{"ast":null,"code":"import { ElementStates } from \"../../types/element-states\";\nimport { delayPromise, swap } from \"../../utils/utils\";\nimport { DELAY_IN_MS } from \"../../constants/delays\";\n\n// Функция для сортировки массива \"по середине\"\nexport const sortArray = async (arr, setState, setLoader) => {\n  const {\n    length\n  } = arr;\n\n  // Проверка на пустой массив\n  if (arr.length === 0) {\n    return arr;\n  }\n  let start = 0;\n  let end;\n  let mid = Math.floor(length / 2);\n\n  // Проход по первой половине массива\n  for (start; start < mid; start++) {\n    end = length - 1 - start;\n    // Если индекс начала меньше индекса конца\n    if (start < end) {\n      // Установка состояний элементов в \"Changing\" для анимации\n      arr[start].state = ElementStates.Changing;\n      arr[end].state = ElementStates.Changing;\n      setState([...arr]);\n    }\n    swap(arr, start, end);\n    arr[start].state = ElementStates.Modified;\n    arr[end].state = ElementStates.Modified;\n    await delayPromise(DELAY_IN_MS); // Задержка для анимации\n  }\n\n  // Установка состояния \"Modified\" для последнего элемента\n  arr[start].state = ElementStates.Modified;\n  setState([...arr]);\n\n  // Завершение анимации и снятие состояния \"Loading\"\n  setLoader(false);\n  return arr; // Возврат отсортированного массива\n};","map":{"version":3,"names":["ElementStates","delayPromise","swap","DELAY_IN_MS","sortArray","arr","setState","setLoader","length","start","end","mid","Math","floor","state","Changing","Modified"],"sources":["/Users/illia/Documents/_2024/_learn /algo-sosh/src/components/string-page/string-page-algorithm.ts"],"sourcesContent":["import { ElementStates } from \"../../types/element-states\";\nimport { TString } from \"../../types/common-types\";\nimport { delayPromise, swap } from \"../../utils/utils\";\nimport { DELAY_IN_MS } from \"../../constants/delays\";\n\n// Функция для сортировки массива \"по середине\"\nexport const sortArray = async (\n  arr: TString[],\n  setState: React.Dispatch<React.SetStateAction<TString[]>>,\n  setLoader: (value: React.SetStateAction<boolean>) => void\n) => {\n  const { length } = arr;\n  \n  // Проверка на пустой массив\n  if (arr.length === 0) {\n    return arr;\n  }\n\n  let start = 0;\n  let end;\n  let mid = Math.floor(length / 2);\n  \n  // Проход по первой половине массива\n  for (start; start < mid; start++) {\n    end = length - 1 - start;\n    // Если индекс начала меньше индекса конца\n    if (start < end) {\n      // Установка состояний элементов в \"Changing\" для анимации\n      arr[start].state = ElementStates.Changing;\n      arr[end].state = ElementStates.Changing;\n      setState([...arr]);\n    }\n    swap(arr, start, end);\n    arr[start].state = ElementStates.Modified;\n    arr[end].state = ElementStates.Modified;\n    await delayPromise(DELAY_IN_MS); // Задержка для анимации\n  }\n\n  // Установка состояния \"Modified\" для последнего элемента\n  arr[start].state = ElementStates.Modified;\n  setState([...arr]);\n  \n  // Завершение анимации и снятие состояния \"Loading\"\n  setLoader(false);\n  return arr; // Возврат отсортированного массива\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,4BAA4B;AAE1D,SAASC,YAAY,EAAEC,IAAI,QAAQ,mBAAmB;AACtD,SAASC,WAAW,QAAQ,wBAAwB;;AAEpD;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CACvBC,GAAc,EACdC,QAAyD,EACzDC,SAAyD,KACtD;EACH,MAAM;IAAEC;EAAO,CAAC,GAAGH,GAAG;;EAEtB;EACA,IAAIA,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOH,GAAG;EACZ;EAEA,IAAII,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG;EACP,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC;;EAEhC;EACA,KAAKC,KAAK,EAAEA,KAAK,GAAGE,GAAG,EAAEF,KAAK,EAAE,EAAE;IAChCC,GAAG,GAAGF,MAAM,GAAG,CAAC,GAAGC,KAAK;IACxB;IACA,IAAIA,KAAK,GAAGC,GAAG,EAAE;MACf;MACAL,GAAG,CAACI,KAAK,CAAC,CAACK,KAAK,GAAGd,aAAa,CAACe,QAAQ;MACzCV,GAAG,CAACK,GAAG,CAAC,CAACI,KAAK,GAAGd,aAAa,CAACe,QAAQ;MACvCT,QAAQ,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC;IACpB;IACAH,IAAI,CAACG,GAAG,EAAEI,KAAK,EAAEC,GAAG,CAAC;IACrBL,GAAG,CAACI,KAAK,CAAC,CAACK,KAAK,GAAGd,aAAa,CAACgB,QAAQ;IACzCX,GAAG,CAACK,GAAG,CAAC,CAACI,KAAK,GAAGd,aAAa,CAACgB,QAAQ;IACvC,MAAMf,YAAY,CAACE,WAAW,CAAC,CAAC,CAAC;EACnC;;EAEA;EACAE,GAAG,CAACI,KAAK,CAAC,CAACK,KAAK,GAAGd,aAAa,CAACgB,QAAQ;EACzCV,QAAQ,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC;;EAElB;EACAE,SAAS,CAAC,KAAK,CAAC;EAChB,OAAOF,GAAG,CAAC,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}